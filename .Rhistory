rm(list=ls())
getTwitterOAuth(XavkeOg9cRhwgNa6aZAy4Zuv1, 2gKMqCB6yz1T64vI18BVE3xBGLT1a7fICnKobaHDLKpaoAlBhh)
getTwitterOAuth(K0d4E3X0qQZTLfXCBVpdz6yrM1pBPq8x8yy25r2, HlIb1IFYjhNBIPO1MfxQoiMtmwfP0zBCWggZAwfOkPAyg)
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumerKey <- "XavkeOg9cRhwgNa6aZAy4Zuv1"
consumerSecret <- "2gKMqCB6yz1T64vI18BVE3xBGLT1a7fICnKobaHDLKpaoAlBhh"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
registerTwitterOAuth(twitCred)
twitCred$handshake()
twitCred$handshake()
str(twitCred)
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
twitCred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
twitCred$handshake()
twitCred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
accessURL <- "http://api.twitter.com/oauth/access_token"
reqURL <- "http://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumerKey <- "XavkeOg9cRhwgNa6aZAy4Zuv1"
consumerSecret <- "2gKMqCB6yz1T64vI18BVE3xBGLT1a7fICnKobaHDLKpaoAlBhh"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
twitCred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumerKey <- "XavkeOg9cRhwgNa6aZAy4Zuv1"
consumerSecret <- "2gKMqCB6yz1T64vI18BVE3xBGLT1a7fICnKobaHDLKpaoAlBhh"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
twitCred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
?handshake
str(twitCred)
reqURL <- "http://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumerKey <- "XavkeOg9cRhwgNa6aZAy4Zuv1"
consumerSecret <- "2gKMqCB6yz1T64vI18BVE3xBGLT1a7fICnKobaHDLKpaoAlBhh"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
twitCred$handshake()
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumerKey <- "XavkeOg9cRhwgNa6aZAy4Zuv1"
consumerSecret <- "2gKMqCB6yz1T64vI18BVE3xBGLT1a7fICnKobaHDLKpaoAlBhh"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
twitCred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
install.packages(c("devtools", "rjson", "bit64", "httr"))
install.packages(c("devtools", "rjson", "bit64", "httr"))
install.packages(c("devtools", "rjson", "bit64", "httr"))
library(devtools)
install_github("twitteR", username="geoffjentry")
library(twitteR)
api_key <- "XavkeOg9cRhwgNa6aZAy4Zuv1"
api_secret <- "2gKMqCB6yz1T64vI18BVE3xBGLT1a7fICnKobaHDLKpaoAlBhh"
access_token <- "1621088430-K0d4E3X0qQZTLfXCBVpdz6yrM1pBPq8x8yy25r2"
access_token_secret <- "HlIb1IFYjhNBIPO1MfxQoiMtmwfP0zBCWggZAwfOkPAyg"
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
searchTwitter("iphone")
searchTwitter("iphone")
?searchTwitter
install.packages("twitteR")
install.packages("twitteR")
library(twitteR)
searchTwitter("iphone")
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
api_key <- "XavkeOg9cRhwgNa6aZAy4Zuv1"
api_secret <- "2gKMqCB6yz1T64vI18BVE3xBGLT1a7fICnKobaHDLKpaoAlBhh"
access_token <- "1621088430-K0d4E3X0qQZTLfXCBVpdz6yrM1pBPq8x8yy25r2"
access_token_secret <- "HlIb1IFYjhNBIPO1MfxQoiMtmwfP0zBCWggZAwfOkPAyg"
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
install_github("twitteR", username="geoffjentry")
library(devtools)
install_github("twitteR", username="geoffjentry")
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
searchTwitter("iphone")
install.packages("ROAuth")
install.packages("ROAuth")
install.packages("twitteR")
install.packages("wordcloud")
install.packages("tm")
library("ROAuth")
library("ROAuth")
library("twitteR")
library("wordcloud")
library("tm")
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
cred <- OAuthFactory$new(consumerKey='XavkeOg9cRhwgNa6aZAy4Zuv1',
consumerSecret='2gKMqCB6yz1T64vI18BVE3xBGLT1a7fICnKobaHDLKpaoAlBhh',
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='https://api.twitter.com/oauth/access_token',
authURL='https://api.twitter.com/oauth/authorize')
rm(access_token_secret)
rm(access_token)
rm(api_key)
rm(api_secret)
cred$handshake(cainfo="cacert.pem")
save(cred, file="twitter_authentication.Rdata")
getwd()
list.files9
list.files()
registerTwitterOAuth(cred)
r_stats<- searchTwitter("#Rstats", n=1500, cainfo="cacert.pem")
length(r_stats)
r_stats_text <- sapply(r_stats, function(x) x$getText())
r_stats_text_corpus <- Corpus(VectorSource(r_stats_text))
r_stats_text_corpus <- tm_map(r_stats_text_corpus, content_transformer(tolower))
r_stats_text_corpus <- tm_map(r_stats_text_corpus, removePunctuation)
r_stats_text_corpus <- tm_map(r_stats_text_corpus, function(x)removeWords(x,stopwords()))
wordcloud(r_stats_text_corpus)
str(r_stats_text)
r_stats_text[1]
r_stats_text[2]
r_stats_text[3]
r_stats_text[4]
r_stats_text[5]
r_stats_text[5]
r_stats_text[6]
r_stats_text[1220]
trend <- availableTrendLocations(cainfo="cacert.pem")
head(trend)
trend <- getTrends(1, cainfo="cacert.pem")
trend
me <- getUser("mccannecology", cainfo="cacert.pem")
me$getId()
getUser(1621088430,cainfo="cacert.pem")
me$getFollowerIDs(cainfo="cacert.pem")
me$getFollowers(cainfo="cacert.pem")
library(twitteR)
rdmTweets <- userTimeline("rdatamining", n=100)
load("twitter_authentication.Rdata")
registerTwitterOAuth(cred)
rdmTweets <- userTimeline("rdatamining", n=100)
n <- length(rdmTweets)
registerTwitterOAuth(cred)
r_stats<- searchTwitter("#Rstats", n=1500, cainfo="cacert.pem")
rdmTweets <- userTimeline("mccannecology", n=100)
?userTimeline
registerTwitterOAuth(cred)
rdmTweets <- userTimeline("mccannecology", n=100, cainfo="cacert.pem")
n <- length(rdmTweets)
rdmTweets[1:3]
df <- do.call("rbind", lapply(rdmTweets, as.data.frame))
dim(df)
myCorpus <- Corpus(VectorSource(df$text))
library(tm)
myCorpus <- Corpus(VectorSource(df$text))
rm(list=ls())
rdmTweets <- userTimeline("mccannecology", n=100, cainfo="cacert.pem")
n <- length(rdmTweets)
rdmTweets[1:3]
?userTimeline
df <- do.call("rbind", lapply(rdmTweets, as.data.frame))
dim(df)
library(tm)
myCorpus <- Corpus(VectorSource(df$text))
myCorpus <- tm_map(myCorpus, tolower)
myCorpus <- tm_map(myCorpus, removePunctuation)
myCorpus <- tm_map(myCorpus, removeNumbers)
myStopwords <- c(stopwords('english'), "available", "via")
idx <- which(myStopwords == "r")
myStopwords <- myStopwords[-idx]
myCorpus <- tm_map(myCorpus, removeWords, myStopwords)
myCorpus
dictCorpus <- myCorpus
myCorpus <- tm_map(myCorpus, stemDocument)
install.packages("Snowball")
install.packages("SnowballC")
myCorpus <- tm_map(myCorpus, stemDocument)
inspect(myCorpus[1:3])
myCorpus <- tm_map(myCorpus, stemCompletion, dictionary=dictCorpus)
myCorpus
myDtm <- TermDocumentMatrix(myCorpus, control = list(minWordLength = 1))
myCorpus <- tm_map(myCorpus, stemCompletion, dictionary=dictCorpus)
inspect(myCorpus[1:3])
myCorpus <- tm_map(myCorpus, stemDocument)
inspect(myCorpus[1:3])
myCorpus <- tm_map(myCorpus, stemCompletion, dictionary=dictCorpus)
?tm_map
myCorpus <- tm_map(myCorpus, stemCompletion)
dictCorpus <- myCorpus
myCorpus <- tm_map(myCorpus, removeWords, myStopwords)
dictCorpus <- myCorpus
myCorpus <- tm_map(myCorpus, stemDocument)
inspect(myCorpus[1:3])
myCorpus <- tm_map(myCorpus, stemCompletion, dictionary=dictCorpus)
myCorpus <- Corpus(VectorSource(df$text))
myCorpus <- tm_map(corpus, myCorpus(tolower))
myCorpus <- tm_map(myCorpus, myCorpus(tolower))
myCorpus <- tm_map(myCorpus, content_transformer(tolower))
myCorpus <- tm_map(myCorpus, removePunctuation)
myCorpus <- tm_map(myCorpus, removeNumbers)
# remove stopwords
# keep "r" by removing it from stopwords
myStopwords <- c(stopwords('english'), "available", "via")
idx <- which(myStopwords == "r")
myStopwords <- myStopwords[-idx]
myCorpus <- tm_map(myCorpus, removeWords, myStopwords)
dictCorpus <- myCorpus
# stem words in a text document with the snowball stemmers,
# which requires packages Snowball, RWeka, rJava, RWekajars
myCorpus <- tm_map(myCorpus, stemDocument)
# inspect the first three ``documents"
inspect(myCorpus[1:3])
# stem completion
myCorpus <- tm_map(myCorpus, stemCompletion, dictionary=dictCorpus)
warnings()
myDtm <- TermDocumentMatrix(myCorpus, control = list(minWordLength = 1))
inspect(myDtm[266:270,31:40])
rm(list=ls())
install.packages("dplyr")
suppressMessages(library(dplyr))
library(hflights)
data(hflights)
head(hflights)
flights <- tbl_df(hflights)
flights
print(flights, n=20)
data.frame(head(flights))
flights[flights$Month==1 & flights$DayofMonth==1, ]
filter(flights, Month==1, DayofMonth==1)
filter(flights, UniqueCarrier=="AA" | UniqueCarrier=="UA")
filter(flights, UniqueCarrier %in% c("AA", "UA"))
flights[, c("DepTime", "ArrTime", "FlightNum")]
select(flights, DepTime, ArrTime, FlightNum)
select(flights, Year:DayofMonth, contains("Taxi"), contains("Delay"))
filter(select(flights, UniqueCarrier, DepDelay), DepDelay > 60)
flights %>% select(UniqueCarrier, DepDelay) %>% filter(DepDelay > 60)
x1 <- 1:5; x2 <- 2:6
sqrt(sum((x1-x2)^2))
(x1-x2)^2 %>% sum() %>% sqrt()
flights[order(flights$DepDelay), c("UniqueCarrier", "DepDelay")]
flights %>% select(UniqueCarrier, DepDelay) %>% arrange(DepDelay)
flights[order(flights$DepDelay), c("UniqueCarrier", "DepDelay")]
flights %>% select(UniqueCarrier, DepDelay) %>% arrange(DepDelay)
flights %>% select(UniqueCarrier, DepDelay) %>% arrange(desc(DepDelay))
flights$Speed <- flights$Distance / flights$AirTime*60
flights[, c("Distance", "AirTime", "Speed")]
flights %>% select(Distance, AirTime) %>% mutate(Speed = Distance/AirTime*60)
head(with(flights, tapply(ArrDelay, Dest, mean, na.rm=TRUE)))
head(aggregate(ArrDelay ~ Dest, flights, mean))
flights %>% group_by(Dest) %>% summarise(avg_delay = mean(ArrDelay, na.rm=TRUE))
flights %>% group_by(UniqueCarrier) %>% summarise_each(funs(mean), Cancelled, Diverted)
flights %>% group_by(UniqueCarrier) %>% summarise_each(funs(min(., na.rm=TRUE), max(., na.rm=TRUE)), matches("Delay"))
flights %>% group_by(Month, DayofMonth) %>% tally(sort = TRUE)
flights %>% group_by(Dest) %>% summarise(flight_count = n(), plane_count = n_distinct(TailNum))
flights %>% group_by(Dest) %>% select(Cancelled) %>% table() %>% head()
flights %>%
group_by(Dest) %>%
select(Cancelled) %>%
table() %>%
head()
flights %>%
group_by(Month) %>%
summarise(flight_count = n()) %>%
mutate(change = flight_count - lag(flight_count))
flights %>%
group_by(Month) %>%
summarise(flight_count = n())
flights %>%
group_by(Month) %>%
summarise(flight_count = n()) %>%
mutate(change = flight_count - lag(flight_count))
rm(list=ls())
getwd()
?setwd()
rpois(1000,lambda=1000)
rpois(1000,lambda=10000)
rpois(1000,lambda=100000)
rpois(1000,lambda=1000000)
library(shinyApps)
library(shinyapps)
markdown::run
rmarkdown::run
library(rmarkdown)
rmarkdown::run
?geom_abline
#runtime: shiny
# download data
library(RCurl)
URL <- "https://data.cityofnewyork.us/api/views/jb3k-j3gp/rows.csv?accessType=DOWNLOAD"
X <- getURL(URL, ssl.verifypeer = FALSE)
data <- read.csv(textConnection(X))
# examine the data
names(data)
dim(data)
str(data)
# convert Name to a character
data$Name <- as.character(data$Name)
# clean up names - SLOW VERSION WITH A FOR LOOP
ptm <- proc.time() # start a timer
data$last_name <- 0
data$first_name <- 0
for (i in 1:nrow(data)){
data$last_name[i] <- strsplit(data$Name,",")[[i]][1]
data$first_name[i] <- strsplit(data$Name,",")[[i]][2]
}
install.packages("splitstackshape")
library(splitstackshape)
data <- cSplit(data, splitCols="Name", sep=",",drop=FALSE)
names(data)
data$Name_3 <- NULL
data$Name_4 <- NULL
data$Name_5 <- NULL
data$Name_6 <- NULL
last_names <- aggregate(data$Name_1, by=list(data$Name_1), length)
colnames(last_names)[1] <- "name"
colnames(last_names)[2] <- "count"
last_names <- last_names[order(last_names$count,decreasing=TRUE),]
first_names <- aggregate(data$Name_2, by=list(data$Name_2), length)
first_names <- first_names[order(first_names$count,decreasing=TRUE),]
full_names <- aggregate(data$Name, by=list(data$Name), length)
colnames(last_names)[1] <- "name"
colnames(last_names)[2] <- "count"
last_names <- last_names[order(last_names$count,decreasing=TRUE),]
colnames(last_names)
first_names <- aggregate(data$Name_2, by=list(data$Name_2), length)
colnames(first_names)[1] <- "name"
colnames(first_names)[2] <- "count"
first_names <- first_names[order(first_names$count,decreasing=TRUE),]
full_names <- aggregate(data$Name, by=list(data$Name), length)
colnames(full_names)[1] <- "name"
colnames(full_names)[2] <- "count"
full_names <- full_names[order(full_names$count,decreasing=TRUE),]
# just take the top 30
last_names_top30 <- last_names[1:30,]
first_names_top30 <- first_names[1:30,]
full_names_top30 <- full_names[1:30,]
library(ggplot2)
plot_first_names <- ggplot(first_names_top30, aes(reorder(name,-count),count)) + geom_bar(stat="identity")
plot_first_names <- plot_first_names + xlab("First Name") + ylab("Number")
plot_first_names <- plot_first_names + theme_classic(base_size=12)
plot_first_names <- plot_first_names + theme(axis.text.x=element_text(angle=45, hjust=1))
plot_first_names
plot_last_names <- ggplot(last_names_top30, aes(reorder(name,-count),count)) + geom_bar(stat="identity")
plot_last_names <- plot_last_names + xlab("Last Name") + ylab("Number")
plot_last_names <- plot_last_names + theme_classic(base_size=12)plot_first
plot_last_names <- plot_last_names + theme(axis.text.x=element_text(angle=45, hjust=1))
plot_last_names
plot_last_names <- ggplot(last_names_top30, aes(reorder(name,-count),count)) + geom_bar(stat="identity")
plot_last_names <- plot_last_names + xlab("Last Name") + ylab("Number")
plot_last_names <- plot_last_names + theme_classic(base_size=12)
plot_last_names <- plot_last_names + theme(axis.text.x=element_text(angle=45, hjust=1))
plot_last_names
names_fixed <- data
names_fixed$Name_2[names_fixed$Name_2=="MD"] <- "MOHAMMAD"
names_fixed$Name_2[names_fixed$Name_2=="MOHAMMED"] <- "MOHAMMAD"
names_fixed$Name_2[names_fixed$Name_2=="MUHAMMAD"] <- "MOHAMMAD"
names_fixed$Name_2[names_fixed$Name_2=="MOHAMED"] <- "MOHAMMAD"
first_names_fixed <- aggregate(names_fixed$Name_2, by=list(names_fixed$Name_2), length)
colnames(first_names_fixed)[1] <- "name"
colnames(first_names_fixed)[2] <- "count"
first_names_fixed <- first_names_fixed[order(first_names_fixed$count,decreasing=TRUE),]
first_names_fixed_top30 <- first_names_fixed[1:30,]
plot_first_names_fixed <- ggplot(first_names_fixed_top30, aes(reorder(name,-count),count)) + geom_bar(stat="identity")
plot_first_names_fixed <- plot_first_names_fixed + xlab("First Name") + ylab("Number")
plot_first_names_fixed <- plot_first_names_fixed + theme_classic(base_size=12)
plot_first_names_fixed <- plot_first_names_fixed + theme(axis.text.x=element_text(angle=45, hjust=1))
plot_first_names_fixed <- plot_first_names_fixed + annotate("text",x=25,y=0.85*max(first_names_fixed_top30$count),label="Source: NYC OpenData \n Date: Jan.9, 2015 \n BY: MJ McCann",size=4)
plot_first_names_fixed
library(gridExtra)
first_last_names <- arrangeGrob(plot_first_names_fixed, plot_last_names)
first_last_names
plot_first_names_fixed <- ggplot(first_names_fixed_top30, aes(reorder(name,-count),count)) + geom_bar(stat="identity")
plot_first_names_fixed <- plot_first_names_fixed + xlab("First Name") + ylab("Number")
plot_first_names_fixed <- plot_first_names_fixed + theme_classic(base_size=12)
plot_first_names_fixed <- plot_first_names_fixed + theme(axis.text.x=element_text(angle=45, hjust=1))
plot_first_names_fixed <- plot_first_names_fixed + annotate("text",x=25,y=0.85*max(first_names_fixed_top30$count),label="Source: NYC OpenData \n Date: Jan.9, 2015 \n BY: MJ McCann \n @McCannEcology \n Code: http://bit.ly/1KOMsi9",size=4)
plot_first_names_fixed
plot_first_names_fixed <- ggplot(first_names_fixed_top30, aes(reorder(name,-count),count)) + geom_bar(stat="identity")
plot_first_names_fixed <- plot_first_names_fixed + xlab("First Name") + ylab("Number")
plot_first_names_fixed <- plot_first_names_fixed + theme_classic(base_size=12)
plot_first_names_fixed <- plot_first_names_fixed + theme(axis.text.x=element_text(angle=45, hjust=1))
plot_first_names_fixed <- plot_first_names_fixed + annotate("text",x=23,y=0.85*max(first_names_fixed_top30$count),label="Source: NYC OpenData \n Date: Jan.9, 2015 \n BY: MJ McCann \n @McCannEcology \n Code: http://bit.ly/1KOMsi9",size=4)
plot_first_names_fixed
first_last_names <- arrangeGrob(plot_first_names_fixed, plot_last_names)
first_last_names
ggsave("first_last_names.jpg",first_last_names,height=6,width=6)
plot_first_names_fixed <- ggplot(first_names_fixed_top30, aes(reorder(name,-count),count)) + geom_bar(stat="identity")
plot_first_names_fixed <- plot_first_names_fixed + xlab("First Name") + ylab("Number")
plot_first_names_fixed <- plot_first_names_fixed + theme_classic(base_size=12)
plot_first_names_fixed <- plot_first_names_fixed + theme(axis.text.x=element_text(angle=45, hjust=1))
plot_first_names_fixed <- plot_first_names_fixed + annotate("text",x=23,y=0.85*max(first_names_fixed_top30$count),label="Source: NYC OpenData \n Date: Jan.9, 2015 \n BY: MJ McCann \n @McCannEcology \n Code: http://bit.ly/1KOMsi9",size=3)
plot_first_names_fixed
first_last_names <- arrangeGrob(plot_first_names_fixed, plot_last_names)
first_last_names
ggsave("first_last_names.jpg",first_last_names,height=6,width=6)
plot_first_names_fixed <- ggplot(first_names_fixed_top30, aes(reorder(name,-count),count)) + geom_bar(stat="identity")
plot_first_names_fixed <- plot_first_names_fixed + xlab("First Name") + ylab("Number")
plot_first_names_fixed <- plot_first_names_fixed + theme_classic(base_size=12)
plot_first_names_fixed <- plot_first_names_fixed + theme(axis.text.x=element_text(angle=45, hjust=1))
plot_first_names_fixed <- plot_first_names_fixed + annotate("text",x=23,y=0.75*max(first_names_fixed_top30$count),label="Source: NYC OpenData \n Date: Jan.9, 2015 \n BY: MJ McCann \n @McCannEcology \n Code: http://bit.ly/1KOMsi9",size=3)
plot_first_names_fixed
first_last_names <- arrangeGrob(plot_first_names_fixed, plot_last_names)
first_last_names
ggsave("first_last_names.jpg",first_last_names,height=6,width=6)
plot_first_names_fixed <- ggplot(first_names_fixed_top30, aes(reorder(name,-count),count)) + geom_bar(stat="identity")
plot_first_names_fixed <- plot_first_names_fixed + xlab("First Name") + ylab("Number")
plot_first_names_fixed <- plot_first_names_fixed + theme_classic(base_size=12)
plot_first_names_fixed <- plot_first_names_fixed + theme(axis.text.x=element_text(angle=45, hjust=1))
plot_first_names_fixed <- plot_first_names_fixed + annotate("text",x=25,y=0.75*max(first_names_fixed_top30$count),label="Source: NYC OpenData \n Date: Jan.9, 2015 \n By: MJ McCann \n @McCannEcology \n Code: http://bit.ly/1KOMsi9",size=2)
plot_first_names_fixed
first_last_names <- arrangeGrob(plot_first_names_fixed, plot_last_names)
first_last_names
plot_first_names_fixed <- ggplot(first_names_fixed_top30, aes(reorder(name,-count),count)) + geom_bar(stat="identity")
plot_first_names_fixed <- plot_first_names_fixed + xlab("First Name") + ylab("Number")
plot_first_names_fixed <- plot_first_names_fixed + theme_classic(base_size=12)
plot_first_names_fixed <- plot_first_names_fixed + theme(axis.text.x=element_text(angle=45, hjust=1))
plot_first_names_fixed <- plot_first_names_fixed + annotate("text",x=27,y=0.75*max(first_names_fixed_top30$count),label="Source: NYC OpenData \n Date: Jan.9, 2015 \n By: MJ McCann \n @McCannEcology \n Code: http://bit.ly/1KOMsi9",size=2)
plot_first_names_fixed
first_last_names <- arrangeGrob(plot_first_names_fixed, plot_last_names)
first_last_names
ggsave("first_last_names.jpg",first_last_names,height=6,width=6)
plot_first_names_fixed <- ggplot(first_names_fixed_top30, aes(reorder(name,-count),count)) + geom_bar(stat="identity")
plot_first_names_fixed <- plot_first_names_fixed + xlab("First Name") + ylab("Number")
plot_first_names_fixed <- plot_first_names_fixed + theme_classic(base_size=12)
plot_first_names_fixed <- plot_first_names_fixed + theme(axis.text.x=element_text(angle=45, hjust=1))
plot_first_names_fixed <- plot_first_names_fixed + annotate("text",x=27,y=0.85*max(first_names_fixed_top30$count),label="Source: NYC OpenData \n Date: Jan.9, 2015 \n By: MJ McCann \n @McCannEcology \n Code: http://bit.ly/1KOMsi9",size=2)
plot_first_names_fixed
first_last_names <- arrangeGrob(plot_first_names_fixed, plot_last_names)
first_last_names
ggsave("first_last_names.jpg",first_last_names,height=6,width=6)
save.image("C:/sand_box/workspace - taxi driver.RData")
plot_last_names <- ggplot(last_names_top30, aes(reorder(name,-count),count)) + geom_bar(stat="identity")
plot_last_names <- plot_last_names + xlab("Last Name") + ylab("Number")
plot_last_names <- plot_last_names + theme_classic(base_size=10)
plot_last_names <- plot_last_names + theme(axis.text.x=element_text(angle=45, hjust=1))
plot_last_names
plot_first_names_fixed <- ggplot(first_names_fixed_top30, aes(reorder(name,-count),count)) + geom_bar(stat="identity")
plot_first_names_fixed <- plot_first_names_fixed + xlab("First Name") + ylab("Number")
plot_first_names_fixed <- plot_first_names_fixed + theme_classic(base_size=10)
plot_first_names_fixed <- plot_first_names_fixed + theme(axis.text.x=element_text(angle=45, hjust=1))
plot_first_names_fixed <- plot_first_names_fixed + annotate("text",x=27,y=0.85*max(first_names_fixed_top30$count),label="Source: NYC OpenData \n Date: Jan.9, 2015 \n By: MJ McCann \n @McCannEcology \n Code: http://bit.ly/1KOMsi9",size=2)
plot_first_names_fixed
first_last_names <- arrangeGrob(plot_first_names_fixed, plot_last_names)
first_last_names
ggsave("first_last_names.jpg",first_last_names,height=6,width=6)
ggsave("first_last_names.jpg",first_last_names,height=6,width=5)
plot_first_names_fixed <- ggplot(first_names_fixed_top30, aes(reorder(name,-count),count)) + geom_bar(stat="identity")
plot_first_names_fixed <- plot_first_names_fixed + xlab("First Name") + ylab("Number")
plot_first_names_fixed <- plot_first_names_fixed + theme_classic(base_size=11)
plot_first_names_fixed <- plot_first_names_fixed + theme(axis.text.x=element_text(angle=45, hjust=1))
plot_first_names_fixed <- plot_first_names_fixed + annotate("text",x=27,y=0.85*max(first_names_fixed_top30$count),label="Source: NYC OpenData \n Date: Jan.9, 2015 \n By: MJ McCann \n @McCannEcology \n Code: http://bit.ly/1KOMsi9",size=2)
plot_first_names_fixed
plot_last_names <- ggplot(last_names_top30, aes(reorder(name,-count),count)) + geom_bar(stat="identity")
plot_last_names <- plot_last_names + xlab("Last Name") + ylab("Number")
plot_last_names <- plot_last_names + theme_classic(base_size=11)
plot_last_names <- plot_last_names + theme(axis.text.x=element_text(angle=45, hjust=1))
plot_last_names
plot_first_names_fixed <- ggplot(first_names_fixed_top30, aes(reorder(name,-count),count)) + geom_bar(stat="identity")
plot_first_names_fixed <- plot_first_names_fixed + xlab("First Name") + ylab("Number")
plot_first_names_fixed <- plot_first_names_fixed + theme_classic(base_size=11)
plot_first_names_fixed <- plot_first_names_fixed + theme(axis.text.x=element_text(angle=45, hjust=1))
plot_first_names_fixed <- plot_first_names_fixed + annotate("text",x=27,y=0.85*max(first_names_fixed_top30$count),label="Source: NYC OpenData \n Date: Jan.9, 2015 \n By: MJ McCann \n @McCannEcology \n Code: http://bit.ly/1KOMsi9",size=2)
plot_first_names_fixed
first_last_names <- arrangeGrob(plot_first_names_fixed, plot_last_names)
first_last_names
ggsave("first_last_names.jpg",first_last_names,height=6,width=5)
plot_last_names <- ggplot(last_names_top30, aes(reorder(name,-count),count)) + geom_bar(stat="identity")
plot_last_names <- plot_last_names + xlab("Last Name") + ylab("Number")
plot_last_names <- plot_last_names + theme_classic(base_size=10)
plot_last_names <- plot_last_names + theme(axis.text.x=element_text(angle=45, hjust=1))
plot_last_names
plot_first_names_fixed <- ggplot(first_names_fixed_top30, aes(reorder(name,-count),count)) + geom_bar(stat="identity")
plot_first_names_fixed <- plot_first_names_fixed + xlab("First Name") + ylab("Number")
plot_first_names_fixed <- plot_first_names_fixed + theme_classic(base_size=10)
plot_first_names_fixed <- plot_first_names_fixed + theme(axis.text.x=element_text(angle=45, hjust=1))
plot_first_names_fixed <- plot_first_names_fixed + annotate("text",x=27,y=0.85*max(first_names_fixed_top30$count),label="Source: NYC OpenData \n Date: Jan.9, 2015 \n By: MJ McCann \n @McCannEcology \n Code: http://bit.ly/1KOMsi9",size=2)
plot_first_names_fixed
first_last_names <- arrangeGrob(plot_first_names_fixed, plot_last_names)
first_last_names
ggsave("first_last_names.jpg",first_last_names,height=6,width=5)
plot_first_names <- ggplot(first_names_top30, aes(reorder(name,-count),count)) + geom_bar(stat="identity")
plot_first_names <- plot_first_names + xlab("First Name") + ylab("Number")
plot_first_names <- plot_first_names + theme_classic(base_size=12)
plot_first_names <- plot_first_names + theme(axis.text.x=element_text(angle=45, hjust=1))
plot_first_names
save.image("C:/sand_box/workspace - taxi driver.RData")
session.info()
sessionInfo()
sessionInfo()
